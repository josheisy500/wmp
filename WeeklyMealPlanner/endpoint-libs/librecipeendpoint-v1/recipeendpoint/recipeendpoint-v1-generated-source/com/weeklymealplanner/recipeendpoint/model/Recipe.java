/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-04-15 19:10:39 UTC)
 * on 2014-05-15 at 15:17:12 UTC 
 * Modify at your own risk.
 */

package com.weeklymealplanner.recipeendpoint.model;

/**
 * Model definition for Recipe.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the recipeendpoint. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Recipe extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float calories;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float carbohydrates;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float cost;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float fats;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ingredients;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String method;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float protein;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getCalories() {
    return calories;
  }

  /**
   * @param calories calories or {@code null} for none
   */
  public Recipe setCalories(java.lang.Float calories) {
    this.calories = calories;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getCarbohydrates() {
    return carbohydrates;
  }

  /**
   * @param carbohydrates carbohydrates or {@code null} for none
   */
  public Recipe setCarbohydrates(java.lang.Float carbohydrates) {
    this.carbohydrates = carbohydrates;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getCost() {
    return cost;
  }

  /**
   * @param cost cost or {@code null} for none
   */
  public Recipe setCost(java.lang.Float cost) {
    this.cost = cost;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getFats() {
    return fats;
  }

  /**
   * @param fats fats or {@code null} for none
   */
  public Recipe setFats(java.lang.Float fats) {
    this.fats = fats;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Recipe setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getIngredients() {
    return ingredients;
  }

  /**
   * @param ingredients ingredients or {@code null} for none
   */
  public Recipe setIngredients(java.lang.String ingredients) {
    this.ingredients = ingredients;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getMethod() {
    return method;
  }

  /**
   * @param method method or {@code null} for none
   */
  public Recipe setMethod(java.lang.String method) {
    this.method = method;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * @param name name or {@code null} for none
   */
  public Recipe setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Float getProtein() {
    return protein;
  }

  /**
   * @param protein protein or {@code null} for none
   */
  public Recipe setProtein(java.lang.Float protein) {
    this.protein = protein;
    return this;
  }

  @Override
  public Recipe set(String fieldName, Object value) {
    return (Recipe) super.set(fieldName, value);
  }

  @Override
  public Recipe clone() {
    return (Recipe) super.clone();
  }

}
